{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-06-01T15:37:40.883Z",
    "end": "2022-06-01T15:39:15.343Z",
    "duration": 94460,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0ae87a41-c5ce-4c5a-b17a-d68f0f176684",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6f96aa17-2871-4fcd-9522-0f2cbd7fd4f2",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 653,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "55f66818-5bed-4be4-ba43-42fbe9095012",
              "parentUUID": "6f96aa17-2871-4fcd-9522-0f2cbd7fd4f2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "55f66818-5bed-4be4-ba43-42fbe9095012"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 653,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "41f3d0fc-7ae0-4d0f-bd1b-415be31ad296",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 435,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "11728605-a840-4c0a-835f-09357c93619a",
              "parentUUID": "41f3d0fc-7ae0-4d0f-bd1b-415be31ad296",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 384,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "6afd6571-51e1-4666-8ba3-50f5af75f195",
              "parentUUID": "41f3d0fc-7ae0-4d0f-bd1b-415be31ad296",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 335,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "f57fb7f7-1456-4cc8-ab32-68b25306b4fb",
              "parentUUID": "41f3d0fc-7ae0-4d0f-bd1b-415be31ad296",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "3b4a463a-0a01-4ff4-86ee-37f67a6269c9",
              "parentUUID": "41f3d0fc-7ae0-4d0f-bd1b-415be31ad296",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "3542b66f-79a8-4e42-8557-d1d961bc15de",
              "parentUUID": "41f3d0fc-7ae0-4d0f-bd1b-415be31ad296",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "66a0cb8b-fdca-45c6-925b-27dda6c96c11",
              "parentUUID": "41f3d0fc-7ae0-4d0f-bd1b-415be31ad296",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 233,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "e5cf9af8-75c0-4f2d-9a6a-27ad10f9cc6c",
              "parentUUID": "41f3d0fc-7ae0-4d0f-bd1b-415be31ad296",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11728605-a840-4c0a-835f-09357c93619a",
            "6afd6571-51e1-4666-8ba3-50f5af75f195",
            "f57fb7f7-1456-4cc8-ab32-68b25306b4fb",
            "3b4a463a-0a01-4ff4-86ee-37f67a6269c9",
            "3542b66f-79a8-4e42-8557-d1d961bc15de",
            "66a0cb8b-fdca-45c6-925b-27dda6c96c11",
            "e5cf9af8-75c0-4f2d-9a6a-27ad10f9cc6c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2084,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b7d846e1-61d1-4ab3-9ae6-33973da3aa7f",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 235,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "6ca19918-ccaf-4e99-b56b-618e186d0307",
              "parentUUID": "b7d846e1-61d1-4ab3-9ae6-33973da3aa7f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 396,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "f279e86c-ca5b-4939-a23d-3328f85e9303",
              "parentUUID": "b7d846e1-61d1-4ab3-9ae6-33973da3aa7f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ca19918-ccaf-4e99-b56b-618e186d0307",
            "f279e86c-ca5b-4939-a23d-3328f85e9303"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 631,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "60232241-16d5-4436-930b-c59a49acdf9f",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "4416648c-089f-4620-abb0-5631c3c05367",
              "parentUUID": "60232241-16d5-4436-930b-c59a49acdf9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "bb9c2f8b-04e8-477f-a915-8329d30b65c7",
              "parentUUID": "60232241-16d5-4436-930b-c59a49acdf9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 311,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "2320c55c-74b5-47bc-a12e-67d4b5568253",
              "parentUUID": "60232241-16d5-4436-930b-c59a49acdf9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "269769d8-ac20-42a9-9ee2-211d0296cdd2",
              "parentUUID": "60232241-16d5-4436-930b-c59a49acdf9f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4416648c-089f-4620-abb0-5631c3c05367",
            "bb9c2f8b-04e8-477f-a915-8329d30b65c7",
            "2320c55c-74b5-47bc-a12e-67d4b5568253",
            "269769d8-ac20-42a9-9ee2-211d0296cdd2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1158,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ac55c833-d0b7-4679-b100-710504a4a501",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 685,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "c82c1c7e-0337-427d-b095-51792ed6cfb8",
              "parentUUID": "ac55c833-d0b7-4679-b100-710504a4a501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 573,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "41038bca-80a3-4a0b-8b62-26ea414f3eba",
              "parentUUID": "ac55c833-d0b7-4679-b100-710504a4a501",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c82c1c7e-0337-427d-b095-51792ed6cfb8",
            "41038bca-80a3-4a0b-8b62-26ea414f3eba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1258,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d3a1c133-4b9c-4dde-8f17-21b996842fa5",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "ce85d4aa-1429-437f-8db6-34d65e0baa71",
              "parentUUID": "d3a1c133-4b9c-4dde-8f17-21b996842fa5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "89675fe7-1a6c-4742-bb45-9e66c628dd10",
              "parentUUID": "d3a1c133-4b9c-4dde-8f17-21b996842fa5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce85d4aa-1429-437f-8db6-34d65e0baa71",
            "89675fe7-1a6c-4742-bb45-9e66c628dd10"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 372,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "83097494-bb76-47a9-bff4-205f91586134",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 712,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "7de62e6f-8da6-40d5-8f48-42789468ef46",
              "parentUUID": "83097494-bb76-47a9-bff4-205f91586134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9750,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "4970eaa3-7e8b-4bce-9e29-ff9da9e275ae",
              "parentUUID": "83097494-bb76-47a9-bff4-205f91586134",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7de62e6f-8da6-40d5-8f48-42789468ef46",
            "4970eaa3-7e8b-4bce-9e29-ff9da9e275ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10462,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1ebfb12c-787b-454e-a1dd-3d380646abfd",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2541,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "b4273962-9588-46c3-9356-45baa951edb3",
              "parentUUID": "1ebfb12c-787b-454e-a1dd-3d380646abfd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9527,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "e91399c0-4c08-4559-bc46-319614b7d49d",
              "parentUUID": "1ebfb12c-787b-454e-a1dd-3d380646abfd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "e39fd0ea-9597-4050-a8f3-b625ef143132",
              "parentUUID": "1ebfb12c-787b-454e-a1dd-3d380646abfd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b4273962-9588-46c3-9356-45baa951edb3",
            "e91399c0-4c08-4559-bc46-319614b7d49d",
            "e39fd0ea-9597-4050-a8f3-b625ef143132"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14224,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4aa6f834-f9e7-4472-890a-3922f0a93b33",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 338,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "7d437ce9-d765-41cb-80c6-43a1d0c0e8a3",
              "parentUUID": "4aa6f834-f9e7-4472-890a-3922f0a93b33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "013b2c1c-5311-4f0c-bb9a-0fb50171fc9e",
              "parentUUID": "4aa6f834-f9e7-4472-890a-3922f0a93b33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "07c72f84-13b3-4880-bdea-1e67598bd953",
              "parentUUID": "4aa6f834-f9e7-4472-890a-3922f0a93b33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2679,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "9b70c2ec-1720-4c78-9a74-cdf74872aee0",
              "parentUUID": "4aa6f834-f9e7-4472-890a-3922f0a93b33",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d437ce9-d765-41cb-80c6-43a1d0c0e8a3",
            "013b2c1c-5311-4f0c-bb9a-0fb50171fc9e",
            "07c72f84-13b3-4880-bdea-1e67598bd953",
            "9b70c2ec-1720-4c78-9a74-cdf74872aee0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3396,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "594d9844-2723-4417-9a31-791733c1f912",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4634,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34211/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34211/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34211/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34211/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34211/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34211/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34211/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34211/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34211/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9aa1e2de-6073-4e86-9e28-fdfd3bcf934e",
              "parentUUID": "594d9844-2723-4417-9a31-791733c1f912",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4860,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34211/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34211/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34211/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34211/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34211/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34211/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34211/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34211/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34211/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c75ff2fa-0622-40c5-829a-64721876c40e",
              "parentUUID": "594d9844-2723-4417-9a31-791733c1f912",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4594,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34211/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34211/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34211/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34211/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34211/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34211/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34211/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34211/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34211/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4562a94b-474b-41fa-ab26-ec8ecb38cdea",
              "parentUUID": "594d9844-2723-4417-9a31-791733c1f912",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4698,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34211/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34211/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34211/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34211/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34211/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34211/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34211/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34211/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34211/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2c2a1a3b-2e30-4f77-8ed1-c952050d2b32",
              "parentUUID": "594d9844-2723-4417-9a31-791733c1f912",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4703,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34211/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34211/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34211/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34211/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34211/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34211/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34211/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34211/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34211/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b4f4e347-af4d-4ed5-92b7-c2bcffec925e",
              "parentUUID": "594d9844-2723-4417-9a31-791733c1f912",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4780,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34211/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34211/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34211/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34211/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34211/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34211/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34211/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34211/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34211/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ed4956e9-a3b8-42af-a975-475bd12ec838",
              "parentUUID": "594d9844-2723-4417-9a31-791733c1f912",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4666,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34211/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34211/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34211/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34211/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34211/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34211/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34211/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34211/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34211/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e2b2236b-e066-493c-b510-d29b101da3a3",
              "parentUUID": "594d9844-2723-4417-9a31-791733c1f912",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4753,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34211/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34211/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34211/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34211/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34211/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34211/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34211/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34211/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34211/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c7fcc468-51d8-4b2e-88e7-1f26287d9fd0",
              "parentUUID": "594d9844-2723-4417-9a31-791733c1f912",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4711,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34211/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34211/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34211/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34211/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34211/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34211/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34211/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34211/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34211/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a1f15c55-d1b1-45c3-8e50-0df84d018391",
              "parentUUID": "594d9844-2723-4417-9a31-791733c1f912",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9aa1e2de-6073-4e86-9e28-fdfd3bcf934e",
            "c75ff2fa-0622-40c5-829a-64721876c40e",
            "4562a94b-474b-41fa-ab26-ec8ecb38cdea",
            "2c2a1a3b-2e30-4f77-8ed1-c952050d2b32",
            "b4f4e347-af4d-4ed5-92b7-c2bcffec925e",
            "ed4956e9-a3b8-42af-a975-475bd12ec838",
            "e2b2236b-e066-493c-b510-d29b101da3a3",
            "c7fcc468-51d8-4b2e-88e7-1f26287d9fd0",
            "a1f15c55-d1b1-45c3-8e50-0df84d018391"
          ],
          "pending": [],
          "skipped": [],
          "duration": 42399,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b11e7a26-6afa-4f49-b16d-e57db8f15f66",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4736,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34211/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34211/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34211/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34211/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34211/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34211/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34211/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34211/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34211/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5e0958c5-e0a8-4fe1-a7d5-af2c24f50a53",
              "parentUUID": "b11e7a26-6afa-4f49-b16d-e57db8f15f66",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4668,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34211/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34211/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34211/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34211/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34211/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34211/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34211/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34211/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34211/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "59663853-0929-4b46-b688-f0f10619c545",
              "parentUUID": "b11e7a26-6afa-4f49-b16d-e57db8f15f66",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4829,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34211/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34211/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34211/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34211/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34211/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34211/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34211/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34211/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34211/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34211/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "db9b489f-9bdf-42b9-be69-d05099eca972",
              "parentUUID": "b11e7a26-6afa-4f49-b16d-e57db8f15f66",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5e0958c5-e0a8-4fe1-a7d5-af2c24f50a53",
            "59663853-0929-4b46-b688-f0f10619c545",
            "db9b489f-9bdf-42b9-be69-d05099eca972"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14233,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8f87772c-c581-4a8c-8b01-ff122df4d62b",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 867,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34211/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34211/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34211/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34211/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34211/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34211/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34211/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34211/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34211/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34211/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34211/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34211/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "b9234ed6-e0f0-450c-b799-0ec91fd44d5c",
              "parentUUID": "8f87772c-c581-4a8c-8b01-ff122df4d62b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 763,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34211/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34211/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34211/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34211/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34211/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34211/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34211/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34211/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34211/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34211/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34211/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34211/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34211/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "1cf44408-0fcd-4adc-ac33-4430d0ac696a",
              "parentUUID": "8f87772c-c581-4a8c-8b01-ff122df4d62b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b9234ed6-e0f0-450c-b799-0ec91fd44d5c",
            "1cf44408-0fcd-4adc-ac33-4430d0ac696a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1630,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}